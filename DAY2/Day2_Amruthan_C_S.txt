## Hi Guys This is my second day on 100 Days Code Challenge.

And Today I'm Going to Start And solve as much problems I can solve in Project Euler Website.

Will Wait and see at the end of the day how many problems I'll be solving with codes and answers.

I will use C++ 

## Problem 1

/*If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.*/

#include<bits/stdc++.h>
using namespace std;

int main()
{
    int sum=0;
    for(int i=3;i<1000;i+=3)
        sum+=i;
    for(int i=5;i<1000;i+=3)
        sum+=i;
    cout<<sum;
}
//Ans : 233168
-------------------------------------------------------------------------------------------------------------------------------------------------
## Problem 2

/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

#include<bits/stdc++.h>
using namespace std;

int main()
{
    int x=1,y=2,temp=0,sum=0;
    while(y<4000000)
    {
      
       if(y%2==0)
       {
           sum+=y;
       }
       temp=y;
       y=y+x;
       x=temp;
    }
    cout<<sum;
       
}
//Ans : 4613732
------------------------------------------------------------------------------------------------------------------------------------------------
## Problem 3
/*The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?*/ 
#include<bits/stdc++.h>
using namespace std;
 

long long maxPrimeFactors(long long n)
{
    long long maxPrime = -1;
 
    while (n % 2 == 0) {
        maxPrime = 2;
        n >>= 1; // equivalent to n /= 2
    }

     while (n % 3 == 0) {
        maxPrime = 3;
        n=n/3;
    }
    for (int i = 5; i <= sqrt(n); i += 6) {
        while (n % i == 0) {
            maxPrime = i;
            n = n / i;
        }
      while (n % (i+2) == 0) {
            maxPrime = i+2;
            n = n / (i+2);
        }
    }

    if (n > 4)
        maxPrime = n;
 
    return maxPrime;
}
int main()
{
    long long n;
    cin>>n;
    cout << maxPrimeFactors(n) << endl;
 
}
-------------------------------------------------------------------------------------------------------------------------------------------------------

##Problem 4
/*A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.

Find the largest palindrome made from the product of two 3-digit numbers.*/

#include <bits/stdc++.h>

using namespace std;

bool isPalindrome(int n)
{
    int reverse = 0; //to store the reverse of the given number
    int remainder = 0;

    int n1 = n; //storing the original number for comparing later
    //logic to compute the reverse of a number
    while (n != 0)
    {
        remainder = n % 10;
        reverse = reverse * 10 + remainder;
        n /= 10;
    }

    if (reverse == n1)
        return true;
    else
        return false;
}

 
int main()
{

    int max = -1;

    for ( int i = 999 ; i >= 100 ; i--) {
        if ( max >= i*999 ) { 
            break;
        }
        for (int j = 999 ; j >= i ; j-- ) {             
            int p = i * j;
            if ( max < p && isPalindrome(p) ) {
                max = p;
            }
        }
    }       
    cout<<max;
}
----------------------------------------------------------------------------------------------------------------------------------------
##Problem 5
/*2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?*/

#include<bits/stdc++.h>
using namespace std;
 
// Function returns the lcm of first n numbers
long long lcm(long long n)
{
    long long ans = 1;   
    for (long long i = 1; i <= n; i++)
        ans = (ans * i)/(__gcd(ans, i));
    return ans;
}
 
// Driver program to test the above function
int main()
{
    long long n = 20;
    cout << lcm(n);
    return 0;
}
------------------------------------------------------------------------------------------------------------------------------------------------------------
